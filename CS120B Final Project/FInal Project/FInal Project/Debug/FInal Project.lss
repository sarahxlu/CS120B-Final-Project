
FInal Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000372  00800100  00000b70  00000c04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800472  00800472  00000f76  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f76  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fa8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001128  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092f  00000000  00000000  000021c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f3  00000000  00000000  00002af7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f0  00000000  00000000  000033ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000569  00000000  00000000  000035dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000430  00000000  00000000  00003b45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003f75  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	c5 c0       	rjmp	.+394    	; 0x1c0 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	14 e0       	ldi	r17, 0x04	; 4
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e7       	ldi	r30, 0x70	; 112
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 37       	cpi	r26, 0x72	; 114
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	24 e0       	ldi	r18, 0x04	; 4
  b4:	a2 e7       	ldi	r26, 0x72	; 114
  b6:	b4 e0       	ldi	r27, 0x04	; 4
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 37       	cpi	r26, 0x7F	; 127
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c0 d3       	rcall	.+1920   	; 0x844 <main>
  c4:	53 c5       	rjmp	.+2726   	; 0xb6c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
	set_PWM(0);
}

void PWM_off() {
	TCCR3A = 0x00;
	TCCR3B = 0x00;
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	5e 98       	cbi	0x0b, 6	; 11
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	5f 9a       	sbi	0x0b, 7	; 11
  f4:	00 00       	nop
  f6:	5f 98       	cbi	0x0b, 7	; 11
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_ClearScreen>:
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	f5 cf       	rjmp	.-22     	; 0xee <LCD_WriteCommand>
 104:	08 95       	ret

00000106 <LCD_Cursor>:
 106:	81 31       	cpi	r24, 0x11	; 17
 108:	18 f4       	brcc	.+6      	; 0x110 <LCD_Cursor+0xa>
 10a:	81 58       	subi	r24, 0x81	; 129
 10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
 10e:	08 95       	ret
 110:	81 55       	subi	r24, 0x51	; 81
 112:	ed cf       	rjmp	.-38     	; 0xee <LCD_WriteCommand>
 114:	08 95       	ret

00000116 <LCD_init>:
 116:	84 e6       	ldi	r24, 0x64	; 100
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	d6 df       	rcall	.-84     	; 0xc8 <delay_ms>
 11c:	88 e3       	ldi	r24, 0x38	; 56
 11e:	e7 df       	rcall	.-50     	; 0xee <LCD_WriteCommand>
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	e5 df       	rcall	.-54     	; 0xee <LCD_WriteCommand>
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	e3 df       	rcall	.-58     	; 0xee <LCD_WriteCommand>
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	e1 df       	rcall	.-62     	; 0xee <LCD_WriteCommand>
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cb cf       	rjmp	.-106    	; 0xc8 <delay_ms>
 132:	08 95       	ret

00000134 <LCD_WriteData>:
 134:	5e 9a       	sbi	0x0b, 6	; 11
 136:	88 b9       	out	0x08, r24	; 8
 138:	5f 9a       	sbi	0x0b, 7	; 11
 13a:	00 00       	nop
 13c:	5f 98       	cbi	0x0b, 7	; 11
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	c2 cf       	rjmp	.-124    	; 0xc8 <delay_ms>
 144:	08 95       	ret

00000146 <LCD_DisplayString>:
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	18 2f       	mov	r17, r24
 150:	eb 01       	movw	r28, r22
 152:	d6 df       	rcall	.-84     	; 0x100 <LCD_ClearScreen>
 154:	88 81       	ld	r24, Y
 156:	88 23       	and	r24, r24
 158:	51 f0       	breq	.+20     	; 0x16e <LCD_DisplayString+0x28>
 15a:	01 e0       	ldi	r16, 0x01	; 1
 15c:	01 0f       	add	r16, r17
 15e:	81 2f       	mov	r24, r17
 160:	d2 df       	rcall	.-92     	; 0x106 <LCD_Cursor>
 162:	89 91       	ld	r24, Y+
 164:	e7 df       	rcall	.-50     	; 0x134 <LCD_WriteData>
 166:	10 2f       	mov	r17, r16
 168:	88 81       	ld	r24, Y
 16a:	81 11       	cpse	r24, r1
 16c:	f6 cf       	rjmp	.-20     	; 0x15a <LCD_DisplayString+0x14>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <TimerOn>:
 178:	8b e0       	ldi	r24, 0x0B	; 11
 17a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 17e:	8d e7       	ldi	r24, 0x7D	; 125
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 186:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 190:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 194:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 19c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1a4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1a8:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_avr_timer_cntcurr>
 1ac:	90 93 7a 04 	sts	0x047A, r25	; 0x80047a <_avr_timer_cntcurr+0x1>
 1b0:	a0 93 7b 04 	sts	0x047B, r26	; 0x80047b <_avr_timer_cntcurr+0x2>
 1b4:	b0 93 7c 04 	sts	0x047C, r27	; 0x80047c <_avr_timer_cntcurr+0x3>
 1b8:	8f b7       	in	r24, 0x3f	; 63
 1ba:	80 68       	ori	r24, 0x80	; 128
 1bc:	8f bf       	out	0x3f, r24	; 63
 1be:	08 95       	ret

000001c0 <__vector_13>:
 1c0:	1f 92       	push	r1
 1c2:	0f 92       	push	r0
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	0f 92       	push	r0
 1c8:	11 24       	eor	r1, r1
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
 1d2:	80 91 79 04 	lds	r24, 0x0479	; 0x800479 <_avr_timer_cntcurr>
 1d6:	90 91 7a 04 	lds	r25, 0x047A	; 0x80047a <_avr_timer_cntcurr+0x1>
 1da:	a0 91 7b 04 	lds	r26, 0x047B	; 0x80047b <_avr_timer_cntcurr+0x2>
 1de:	b0 91 7c 04 	lds	r27, 0x047C	; 0x80047c <_avr_timer_cntcurr+0x3>
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	a1 09       	sbc	r26, r1
 1e6:	b1 09       	sbc	r27, r1
 1e8:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_avr_timer_cntcurr>
 1ec:	90 93 7a 04 	sts	0x047A, r25	; 0x80047a <_avr_timer_cntcurr+0x1>
 1f0:	a0 93 7b 04 	sts	0x047B, r26	; 0x80047b <_avr_timer_cntcurr+0x2>
 1f4:	b0 93 7c 04 	sts	0x047C, r27	; 0x80047c <_avr_timer_cntcurr+0x3>
 1f8:	89 2b       	or	r24, r25
 1fa:	8a 2b       	or	r24, r26
 1fc:	8b 2b       	or	r24, r27
 1fe:	99 f4       	brne	.+38     	; 0x226 <__vector_13+0x66>
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <TimerFlag>
 206:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 20a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 20e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 212:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 216:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_avr_timer_cntcurr>
 21a:	90 93 7a 04 	sts	0x047A, r25	; 0x80047a <_avr_timer_cntcurr+0x1>
 21e:	a0 93 7b 04 	sts	0x047B, r26	; 0x80047b <_avr_timer_cntcurr+0x2>
 222:	b0 93 7c 04 	sts	0x047C, r27	; 0x80047c <_avr_timer_cntcurr+0x3>
 226:	bf 91       	pop	r27
 228:	af 91       	pop	r26
 22a:	9f 91       	pop	r25
 22c:	8f 91       	pop	r24
 22e:	0f 90       	pop	r0
 230:	0f be       	out	0x3f, r0	; 63
 232:	0f 90       	pop	r0
 234:	1f 90       	pop	r1
 236:	18 95       	reti

00000238 <TimerSet>:
 238:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 23c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 240:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 244:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 248:	60 93 79 04 	sts	0x0479, r22	; 0x800479 <_avr_timer_cntcurr>
 24c:	70 93 7a 04 	sts	0x047A, r23	; 0x80047a <_avr_timer_cntcurr+0x1>
 250:	80 93 7b 04 	sts	0x047B, r24	; 0x80047b <_avr_timer_cntcurr+0x2>
 254:	90 93 7c 04 	sts	0x047C, r25	; 0x80047c <_avr_timer_cntcurr+0x3>
 258:	08 95       	ret

0000025a <set_PWM>:
 25a:	cf 92       	push	r12
 25c:	df 92       	push	r13
 25e:	ef 92       	push	r14
 260:	ff 92       	push	r15
 262:	6b 01       	movw	r12, r22
 264:	7c 01       	movw	r14, r24
 266:	9b 01       	movw	r18, r22
 268:	ac 01       	movw	r20, r24
 26a:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <__data_end>
 26e:	70 91 73 04 	lds	r23, 0x0473	; 0x800473 <__data_end+0x1>
 272:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <__data_end+0x2>
 276:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <__data_end+0x3>
 27a:	ff d2       	rcall	.+1534   	; 0x87a <__cmpsf2>
 27c:	88 23       	and	r24, r24
 27e:	09 f4       	brne	.+2      	; 0x282 <set_PWM+0x28>
 280:	52 c0       	rjmp	.+164    	; 0x326 <set_PWM+0xcc>
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	a9 01       	movw	r20, r18
 288:	c7 01       	movw	r24, r14
 28a:	b6 01       	movw	r22, r12
 28c:	f6 d2       	rcall	.+1516   	; 0x87a <__cmpsf2>
 28e:	81 11       	cpse	r24, r1
 290:	06 c0       	rjmp	.+12     	; 0x29e <set_PWM+0x44>
 292:	e1 e9       	ldi	r30, 0x91	; 145
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	88 70       	andi	r24, 0x08	; 8
 29a:	80 83       	st	Z, r24
 29c:	05 c0       	rjmp	.+10     	; 0x2a8 <set_PWM+0x4e>
 29e:	e1 e9       	ldi	r30, 0x91	; 145
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	80 81       	ld	r24, Z
 2a4:	83 60       	ori	r24, 0x03	; 3
 2a6:	80 83       	st	Z, r24
 2a8:	28 e5       	ldi	r18, 0x58	; 88
 2aa:	39 e3       	ldi	r19, 0x39	; 57
 2ac:	44 e7       	ldi	r20, 0x74	; 116
 2ae:	5f e3       	ldi	r21, 0x3F	; 63
 2b0:	c7 01       	movw	r24, r14
 2b2:	b6 01       	movw	r22, r12
 2b4:	e2 d2       	rcall	.+1476   	; 0x87a <__cmpsf2>
 2b6:	88 23       	and	r24, r24
 2b8:	3c f4       	brge	.+14     	; 0x2c8 <set_PWM+0x6e>
 2ba:	8f ef       	ldi	r24, 0xFF	; 255
 2bc:	9f ef       	ldi	r25, 0xFF	; 255
 2be:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2c2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 2c6:	23 c0       	rjmp	.+70     	; 0x30e <set_PWM+0xb4>
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	34 e2       	ldi	r19, 0x24	; 36
 2cc:	44 ef       	ldi	r20, 0xF4	; 244
 2ce:	56 e4       	ldi	r21, 0x46	; 70
 2d0:	c7 01       	movw	r24, r14
 2d2:	b6 01       	movw	r22, r12
 2d4:	e4 d3       	rcall	.+1992   	; 0xa9e <__gesf2>
 2d6:	18 16       	cp	r1, r24
 2d8:	2c f4       	brge	.+10     	; 0x2e4 <set_PWM+0x8a>
 2da:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2de:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 2e2:	15 c0       	rjmp	.+42     	; 0x30e <set_PWM+0xb4>
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	53 e4       	ldi	r21, 0x43	; 67
 2ec:	c7 01       	movw	r24, r14
 2ee:	b6 01       	movw	r22, r12
 2f0:	da d3       	rcall	.+1972   	; 0xaa6 <__mulsf3>
 2f2:	9b 01       	movw	r18, r22
 2f4:	ac 01       	movw	r20, r24
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	74 e2       	ldi	r23, 0x24	; 36
 2fa:	84 ef       	ldi	r24, 0xF4	; 244
 2fc:	9a e4       	ldi	r25, 0x4A	; 74
 2fe:	c1 d2       	rcall	.+1410   	; 0x882 <__divsf3>
 300:	28 d3       	rcall	.+1616   	; 0x952 <__fixsfsi>
 302:	61 50       	subi	r22, 0x01	; 1
 304:	71 09       	sbc	r23, r1
 306:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 30a:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 30e:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 312:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 316:	c0 92 72 04 	sts	0x0472, r12	; 0x800472 <__data_end>
 31a:	d0 92 73 04 	sts	0x0473, r13	; 0x800473 <__data_end+0x1>
 31e:	e0 92 74 04 	sts	0x0474, r14	; 0x800474 <__data_end+0x2>
 322:	f0 92 75 04 	sts	0x0475, r15	; 0x800475 <__data_end+0x3>
 326:	ff 90       	pop	r15
 328:	ef 90       	pop	r14
 32a:	df 90       	pop	r13
 32c:	cf 90       	pop	r12
 32e:	08 95       	ret

00000330 <PWM_on>:
 330:	80 e4       	ldi	r24, 0x40	; 64
 332:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 336:	8b e0       	ldi	r24, 0x0B	; 11
 338:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	cb 01       	movw	r24, r22
 342:	8b cf       	rjmp	.-234    	; 0x25a <set_PWM>
 344:	08 95       	ret

00000346 <song1>:
}


void song1(){
 346:	0f 93       	push	r16
 348:	1f 93       	push	r17
 34a:	cf 93       	push	r28
 34c:	df 93       	push	r29
 34e:	cd b7       	in	r28, 0x3d	; 61
 350:	de b7       	in	r29, 0x3e	; 62
 352:	c8 57       	subi	r28, 0x78	; 120
 354:	d1 40       	sbci	r29, 0x01	; 1
 356:	0f b6       	in	r0, 0x3f	; 63
 358:	f8 94       	cli
 35a:	de bf       	out	0x3e, r29	; 62
 35c:	0f be       	out	0x3f, r0	; 63
 35e:	cd bf       	out	0x3d, r28	; 61
	double freq[] = {E4,E4,E4, E4,E4,E4, E4,G,C4,D, E4, F,F,F, F,F, 
 360:	8c eb       	ldi	r24, 0xBC	; 188
 362:	e4 e0       	ldi	r30, 0x04	; 4
 364:	f1 e0       	ldi	r31, 0x01	; 1
 366:	de 01       	movw	r26, r28
 368:	11 96       	adiw	r26, 0x01	; 1
 36a:	01 90       	ld	r0, Z+
 36c:	0d 92       	st	X+, r0
 36e:	8a 95       	dec	r24
 370:	e1 f7       	brne	.-8      	; 0x36a <song1+0x24>
					E4,E4,  E4,D,D,E4, D,G ,E4,E4,E4, E4,E4,E4, E4,G,C4,D, E4, F,F,F, F,F, E4,E4, G,G,F,D,C4};
	double beat[] = {300,300,400, 300,300,400, 300,300,300,300, 700, 300,300,300, 150,300,300,400, 150,300,300,300, 600,450, 
 372:	8c eb       	ldi	r24, 0xBC	; 188
 374:	e0 ec       	ldi	r30, 0xC0	; 192
 376:	f1 e0       	ldi	r31, 0x01	; 1
 378:	de 01       	movw	r26, r28
 37a:	a3 54       	subi	r26, 0x43	; 67
 37c:	bf 4f       	sbci	r27, 0xFF	; 255
 37e:	01 90       	ld	r0, Z+
 380:	0d 92       	st	X+, r0
 382:	8a 95       	dec	r24
 384:	e1 f7       	brne	.-8      	; 0x37e <song1+0x38>
					300,300,400, 300,300,400, 300,300,300,300, 600, 300,300,300, 150,300,300,400, 300,300,300,300,700}; 
	double beatF[] = {150,150,200,150,150,200,150,150,150,150,350,150,150,150,75,150,150,200,75,150,150,150,300,225,
						300,300,400, 300,300,400, 300,300,300,300, 600, 300,300,300, 150,300,300,400, 300,300,300,300,700};
	i = 0; 
 386:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <i>
 38a:	80 e0       	ldi	r24, 0x00	; 0
		 
			//Blinking LEDS
			if(i%2 ==0)
				PORTB = 0x01;
			else
				PORTB = 0x02;
 38c:	02 e0       	ldi	r16, 0x02	; 2
 			while(!TimerFlag);
 			TimerFlag = 0;
		 
			//Blinking LEDS
			if(i%2 ==0)
				PORTB = 0x01;
 38e:	11 e0       	ldi	r17, 0x01	; 1
					300,300,400, 300,300,400, 300,300,300,300, 600, 300,300,300, 150,300,300,400, 300,300,300,300,700}; 
	double beatF[] = {150,150,200,150,150,200,150,150,150,150,350,150,150,150,75,150,150,200,75,150,150,150,300,225,
						300,300,400, 300,300,400, 300,300,300,300, 600, 300,300,300, 150,300,300,400, 300,300,300,300,700};
	i = 0; 
	for(; i<47; i++){
		if(p == 0){
 390:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <p>
 394:	91 11       	cpse	r25, r1
 396:	30 c0       	rjmp	.+96     	; 0x3f8 <song1+0xb2>
			set_PWM(freq[i]);
 398:	e1 e0       	ldi	r30, 0x01	; 1
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	ec 0f       	add	r30, r28
 39e:	fd 1f       	adc	r31, r29
 3a0:	94 e0       	ldi	r25, 0x04	; 4
 3a2:	89 9f       	mul	r24, r25
 3a4:	e0 0d       	add	r30, r0
 3a6:	f1 1d       	adc	r31, r1
 3a8:	11 24       	eor	r1, r1
 3aa:	60 81       	ld	r22, Z
 3ac:	71 81       	ldd	r23, Z+1	; 0x01
 3ae:	82 81       	ldd	r24, Z+2	; 0x02
 3b0:	93 81       	ldd	r25, Z+3	; 0x03
 3b2:	53 df       	rcall	.-346    	; 0x25a <set_PWM>
			TimerSet(beat[i]);
 3b4:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 3b8:	ed eb       	ldi	r30, 0xBD	; 189
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	ec 0f       	add	r30, r28
 3be:	fd 1f       	adc	r31, r29
 3c0:	94 e0       	ldi	r25, 0x04	; 4
 3c2:	89 9f       	mul	r24, r25
 3c4:	e0 0d       	add	r30, r0
 3c6:	f1 1d       	adc	r31, r1
 3c8:	11 24       	eor	r1, r1
 3ca:	60 81       	ld	r22, Z
 3cc:	71 81       	ldd	r23, Z+1	; 0x01
 3ce:	82 81       	ldd	r24, Z+2	; 0x02
 3d0:	93 81       	ldd	r25, Z+3	; 0x03
 3d2:	c4 d2       	rcall	.+1416   	; 0x95c <__fixunssfsi>
 3d4:	31 df       	rcall	.-414    	; 0x238 <TimerSet>
 			while(!TimerFlag);
 3d6:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
 3da:	88 23       	and	r24, r24
 3dc:	e1 f3       	breq	.-8      	; 0x3d6 <song1+0x90>
 			TimerFlag = 0;
 3de:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
		 
			//Blinking LEDS
			if(i%2 ==0)
 3e2:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 3e6:	80 fd       	sbrc	r24, 0
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <song1+0xa8>
				PORTB = 0x01;
 3ea:	15 b9       	out	0x05, r17	; 5
 3ec:	01 c0       	rjmp	.+2      	; 0x3f0 <song1+0xaa>
			else
				PORTB = 0x02;
			set_PWM(0);
 3ee:	05 b9       	out	0x05, r16	; 5
 3f0:	60 e0       	ldi	r22, 0x00	; 0
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	cb 01       	movw	r24, r22
		}
		
		tmpA = ~PINA; 
 3f6:	31 df       	rcall	.-414    	; 0x25a <set_PWM>
 3f8:	80 b1       	in	r24, 0x00	; 0
 3fa:	80 95       	com	r24
 3fc:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <tmpA>
		//Pause
		if(tmpA == 0x01){
 400:	81 30       	cpi	r24, 0x01	; 1
			if(p == 0)
 402:	51 f4       	brne	.+20     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 404:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <p>
 408:	81 11       	cpse	r24, r1
			p = 1;
 40a:	03 c0       	rjmp	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40c:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <p>
			else
			p = 0;
 410:	07 c0       	rjmp	.+14     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 412:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <p>
		}
		if(p == 1){
 416:	20 c0       	rjmp	.+64     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 418:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <p>
			set_PWM(0);
 41c:	81 30       	cpi	r24, 0x01	; 1
 41e:	79 f4       	brne	.+30     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 420:	60 e0       	ldi	r22, 0x00	; 0
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	cb 01       	movw	r24, r22
			i--;
 426:	19 df       	rcall	.-462    	; 0x25a <set_PWM>
 428:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 42c:	81 50       	subi	r24, 0x01	; 1
 42e:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <i>
			while(!TimerFlag);
 432:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
 436:	88 23       	and	r24, r24
			TimerFlag = 0;
 438:	e1 f3       	breq	.-8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 43a:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
		}
		
		//stop button
		if(tmpA == 0x02){
 43e:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <tmpA>
			set_PWM((0));
 442:	82 30       	cpi	r24, 0x02	; 2
 444:	29 f4       	brne	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	cb 01       	movw	r24, r22
			break;
 44c:	06 df       	rcall	.-500    	; 0x25a <set_PWM>
		}
		if(tmpA == 0x08)
 44e:	0c c0       	rjmp	.+24     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 450:	88 30       	cpi	r24, 0x08	; 8
			break; 
		if (tmpA == 0x10)
 452:	51 f0       	breq	.+20     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 454:	80 31       	cpi	r24, 0x10	; 16
	double beat[] = {300,300,400, 300,300,400, 300,300,300,300, 700, 300,300,300, 150,300,300,400, 150,300,300,300, 600,450, 
					300,300,400, 300,300,400, 300,300,300,300, 600, 300,300,300, 150,300,300,400, 300,300,300,300,700}; 
	double beatF[] = {150,150,200,150,150,200,150,150,150,150,350,150,150,150,75,150,150,200,75,150,150,150,300,225,
						300,300,400, 300,300,400, 300,300,300,300, 600, 300,300,300, 150,300,300,400, 300,300,300,300,700};
	i = 0; 
	for(; i<47; i++){
 456:	41 f0       	breq	.+16     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 458:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 45c:	8f 5f       	subi	r24, 0xFF	; 255
 45e:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <i>
 462:	8f 32       	cpi	r24, 0x2F	; 47
 464:	08 f4       	brcc	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
			break; 
		if (tmpA == 0x10)
			break; 
	}
	
}
 466:	94 cf       	rjmp	.-216    	; 0x390 <song1+0x4a>
 468:	c8 58       	subi	r28, 0x88	; 136
 46a:	de 4f       	sbci	r29, 0xFE	; 254
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	1f 91       	pop	r17
 47c:	0f 91       	pop	r16
 47e:	08 95       	ret

00000480 <song2>:
	
void song2(){
 480:	0f 93       	push	r16
 482:	1f 93       	push	r17
 484:	cf 93       	push	r28
 486:	df 93       	push	r29
 488:	cd b7       	in	r28, 0x3d	; 61
 48a:	de b7       	in	r29, 0x3e	; 62
 48c:	c0 5c       	subi	r28, 0xC0	; 192
 48e:	d1 09       	sbc	r29, r1
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	f8 94       	cli
 494:	de bf       	out	0x3e, r29	; 62
 496:	0f be       	out	0x3f, r0	; 63
 498:	cd bf       	out	0x3d, r28	; 61
	double freq[] = {E4,E4,E4,C4,E4,G,100, C4,G3,E3,A, B,A4S,A,G, E4,G,A,F, G,E4,C4,D,B3}; 
 49a:	80 e6       	ldi	r24, 0x60	; 96
 49c:	ec e7       	ldi	r30, 0x7C	; 124
 49e:	f2 e0       	ldi	r31, 0x02	; 2
 4a0:	de 01       	movw	r26, r28
 4a2:	11 96       	adiw	r26, 0x01	; 1
 4a4:	01 90       	ld	r0, Z+
 4a6:	0d 92       	st	X+, r0
 4a8:	8a 95       	dec	r24
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <song2+0x24>
	double beat[] = {250,250,300,250,300,500,600,  500,500,500,400, 300,300,300,400,  300,300,280,300, 280,350,260,250,550}; 
 4ac:	80 e6       	ldi	r24, 0x60	; 96
 4ae:	ec ed       	ldi	r30, 0xDC	; 220
 4b0:	f2 e0       	ldi	r31, 0x02	; 2
 4b2:	de 01       	movw	r26, r28
 4b4:	af 59       	subi	r26, 0x9F	; 159
 4b6:	bf 4f       	sbci	r27, 0xFF	; 255
 4b8:	01 90       	ld	r0, Z+
 4ba:	0d 92       	st	X+, r0
 4bc:	8a 95       	dec	r24
 4be:	e1 f7       	brne	.-8      	; 0x4b8 <song2+0x38>
	i = 0;
 4c0:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <i>
 4c4:	80 e0       	ldi	r24, 0x00	; 0
			TimerFlag = 0;
			//Blinking LEDS	
			if(i%2 ==0)
				PORTB = 0x01;
			else
				PORTB = 0x02;
 4c6:	02 e0       	ldi	r16, 0x02	; 2
			TimerSet(beat[i]);
			while(!TimerFlag);
			TimerFlag = 0;
			//Blinking LEDS	
			if(i%2 ==0)
				PORTB = 0x01;
 4c8:	11 e0       	ldi	r17, 0x01	; 1
void song2(){
	double freq[] = {E4,E4,E4,C4,E4,G,100, C4,G3,E3,A, B,A4S,A,G, E4,G,A,F, G,E4,C4,D,B3}; 
	double beat[] = {250,250,300,250,300,500,600,  500,500,500,400, 300,300,300,400,  300,300,280,300, 280,350,260,250,550}; 
	i = 0;
	for(; i<24; i++){ 
		if(p == 0){
 4ca:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <p>
 4ce:	91 11       	cpse	r25, r1
 4d0:	30 c0       	rjmp	.+96     	; 0x532 <song2+0xb2>
			set_PWM(freq[i]);
 4d2:	e1 e0       	ldi	r30, 0x01	; 1
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	ec 0f       	add	r30, r28
 4d8:	fd 1f       	adc	r31, r29
 4da:	94 e0       	ldi	r25, 0x04	; 4
 4dc:	89 9f       	mul	r24, r25
 4de:	e0 0d       	add	r30, r0
 4e0:	f1 1d       	adc	r31, r1
 4e2:	11 24       	eor	r1, r1
 4e4:	60 81       	ld	r22, Z
 4e6:	71 81       	ldd	r23, Z+1	; 0x01
 4e8:	82 81       	ldd	r24, Z+2	; 0x02
 4ea:	93 81       	ldd	r25, Z+3	; 0x03
 4ec:	b6 de       	rcall	.-660    	; 0x25a <set_PWM>
			TimerSet(beat[i]);
 4ee:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 4f2:	e1 e6       	ldi	r30, 0x61	; 97
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	ec 0f       	add	r30, r28
 4f8:	fd 1f       	adc	r31, r29
 4fa:	94 e0       	ldi	r25, 0x04	; 4
 4fc:	89 9f       	mul	r24, r25
 4fe:	e0 0d       	add	r30, r0
 500:	f1 1d       	adc	r31, r1
 502:	11 24       	eor	r1, r1
 504:	60 81       	ld	r22, Z
 506:	71 81       	ldd	r23, Z+1	; 0x01
 508:	82 81       	ldd	r24, Z+2	; 0x02
 50a:	93 81       	ldd	r25, Z+3	; 0x03
 50c:	27 d2       	rcall	.+1102   	; 0x95c <__fixunssfsi>
 50e:	94 de       	rcall	.-728    	; 0x238 <TimerSet>
			while(!TimerFlag);
 510:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
 514:	88 23       	and	r24, r24
 516:	e1 f3       	breq	.-8      	; 0x510 <song2+0x90>
			TimerFlag = 0;
 518:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
			//Blinking LEDS	
			if(i%2 ==0)
 51c:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 520:	80 fd       	sbrc	r24, 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <song2+0xa8>
				PORTB = 0x01;
 524:	15 b9       	out	0x05, r17	; 5
 526:	01 c0       	rjmp	.+2      	; 0x52a <song2+0xaa>
			else
				PORTB = 0x02;
			set_PWM(0);	 
 528:	05 b9       	out	0x05, r16	; 5
 52a:	60 e0       	ldi	r22, 0x00	; 0
 52c:	70 e0       	ldi	r23, 0x00	; 0
 52e:	cb 01       	movw	r24, r22
		}
		
		tmpA = ~PINA; 
 530:	94 de       	rcall	.-728    	; 0x25a <set_PWM>
 532:	80 b1       	in	r24, 0x00	; 0
 534:	80 95       	com	r24
 536:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <tmpA>
		
		//Pause
		if(tmpA == 0x01){
 53a:	81 30       	cpi	r24, 0x01	; 1
			if(p == 0)
 53c:	61 f4       	brne	.+24     	; 0x556 <song2+0xd6>
 53e:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <p>
 542:	81 11       	cpse	r24, r1
				p = 1;
 544:	03 c0       	rjmp	.+6      	; 0x54c <song2+0xcc>
 546:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <p>
			else
				p = 0;
 54a:	09 c0       	rjmp	.+18     	; 0x55e <song2+0xde>
 54c:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <p>
			while(!TimerFlag);
			TimerFlag = 0;
		}
								
		//stop button
		if(i>1){
 550:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
			if(p == 0)
				p = 1;
			else
				p = 0;
		}
		if(p == 1){
 554:	20 c0       	rjmp	.+64     	; 0x596 <song2+0x116>
 556:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <p>
			set_PWM(0);
 55a:	81 30       	cpi	r24, 0x01	; 1
 55c:	79 f4       	brne	.+30     	; 0x57c <song2+0xfc>
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	cb 01       	movw	r24, r22
			i--;
 564:	7a de       	rcall	.-780    	; 0x25a <set_PWM>
 566:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 56a:	81 50       	subi	r24, 0x01	; 1
 56c:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <i>
			while(!TimerFlag);
 570:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
 574:	88 23       	and	r24, r24
			TimerFlag = 0;
 576:	e1 f3       	breq	.-8      	; 0x570 <song2+0xf0>
 578:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
		}
								
		//stop button
		if(i>1){
 57c:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 580:	82 30       	cpi	r24, 0x02	; 2
			if(tmpA == 0x02){
 582:	48 f0       	brcs	.+18     	; 0x596 <song2+0x116>
 584:	90 91 78 04 	lds	r25, 0x0478	; 0x800478 <tmpA>
				set_PWM((0));
 588:	92 30       	cpi	r25, 0x02	; 2
 58a:	29 f4       	brne	.+10     	; 0x596 <song2+0x116>
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	cb 01       	movw	r24, r22
 592:	63 de       	rcall	.-826    	; 0x25a <set_PWM>
				return;
			}
		}
		if(tmpA == 0x08)
 594:	0c c0       	rjmp	.+24     	; 0x5ae <song2+0x12e>
 596:	90 91 78 04 	lds	r25, 0x0478	; 0x800478 <tmpA>
 59a:	98 30       	cpi	r25, 0x08	; 8
			break; 
		if(tmpA == 0x10)
 59c:	41 f0       	breq	.+16     	; 0x5ae <song2+0x12e>
 59e:	90 31       	cpi	r25, 0x10	; 16
	
void song2(){
	double freq[] = {E4,E4,E4,C4,E4,G,100, C4,G3,E3,A, B,A4S,A,G, E4,G,A,F, G,E4,C4,D,B3}; 
	double beat[] = {250,250,300,250,300,500,600,  500,500,500,400, 300,300,300,400,  300,300,280,300, 280,350,260,250,550}; 
	i = 0;
	for(; i<24; i++){ 
 5a0:	31 f0       	breq	.+12     	; 0x5ae <song2+0x12e>
 5a2:	8f 5f       	subi	r24, 0xFF	; 255
 5a4:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <i>
 5a8:	88 31       	cpi	r24, 0x18	; 24
 5aa:	08 f4       	brcc	.+2      	; 0x5ae <song2+0x12e>
		if(tmpA == 0x08)
			break; 
		if(tmpA == 0x10)
			break; 
	}
}
 5ac:	8e cf       	rjmp	.-228    	; 0x4ca <song2+0x4a>
 5ae:	c0 54       	subi	r28, 0x40	; 64
 5b0:	df 4f       	sbci	r29, 0xFF	; 255
 5b2:	0f b6       	in	r0, 0x3f	; 63
 5b4:	f8 94       	cli
 5b6:	de bf       	out	0x3e, r29	; 62
 5b8:	0f be       	out	0x3f, r0	; 63
 5ba:	cd bf       	out	0x3d, r28	; 61
 5bc:	df 91       	pop	r29
 5be:	cf 91       	pop	r28
 5c0:	1f 91       	pop	r17
 5c2:	0f 91       	pop	r16
 5c4:	08 95       	ret

000005c6 <song3>:

void song3(){	
 5c6:	0f 93       	push	r16
 5c8:	1f 93       	push	r17
 5ca:	cf 93       	push	r28
 5cc:	df 93       	push	r29
 5ce:	cd b7       	in	r28, 0x3d	; 61
 5d0:	de b7       	in	r29, 0x3e	; 62
 5d2:	c8 5c       	subi	r28, 0xC8	; 200
 5d4:	d1 09       	sbc	r29, r1
 5d6:	0f b6       	in	r0, 0x3f	; 63
 5d8:	f8 94       	cli
 5da:	de bf       	out	0x3e, r29	; 62
 5dc:	0f be       	out	0x3f, r0	; 63
 5de:	cd bf       	out	0x3d, r28	; 61
	double freq[]= {G,G,A,G,C5,B, G,G,A,G,D5,C5, G,G,783.99,E5,C5,B,440, 698.46,698.46,E5,C5,D5,C5};
 5e0:	84 e6       	ldi	r24, 0x64	; 100
 5e2:	ec e3       	ldi	r30, 0x3C	; 60
 5e4:	f3 e0       	ldi	r31, 0x03	; 3
 5e6:	de 01       	movw	r26, r28
 5e8:	11 96       	adiw	r26, 0x01	; 1
 5ea:	01 90       	ld	r0, Z+
 5ec:	0d 92       	st	X+, r0
 5ee:	8a 95       	dec	r24
 5f0:	e1 f7       	brne	.-8      	; 0x5ea <song3+0x24>
	double beat[]= {200,200,300,300,300,400,200,200,300,300,300,400,200,200,300,300,300,300,300,200,200,300,300,300,400};
 5f2:	84 e6       	ldi	r24, 0x64	; 100
 5f4:	e0 ea       	ldi	r30, 0xA0	; 160
 5f6:	f3 e0       	ldi	r31, 0x03	; 3
 5f8:	de 01       	movw	r26, r28
 5fa:	ab 59       	subi	r26, 0x9B	; 155
 5fc:	bf 4f       	sbci	r27, 0xFF	; 255
 5fe:	01 90       	ld	r0, Z+
 600:	0d 92       	st	X+, r0
 602:	8a 95       	dec	r24
 604:	e1 f7       	brne	.-8      	; 0x5fe <song3+0x38>
	i = 0; 
 606:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <i>
 60a:	80 e0       	ldi	r24, 0x00	; 0
	
			//Blinking LEDS
			if(i%2 ==0)
			PORTB = 0x01;
			else
			PORTB = 0x02;
 60c:	02 e0       	ldi	r16, 0x02	; 2
			while(!TimerFlag);
			TimerFlag = 0;
	
			//Blinking LEDS
			if(i%2 ==0)
			PORTB = 0x01;
 60e:	11 e0       	ldi	r17, 0x01	; 1
void song3(){	
	double freq[]= {G,G,A,G,C5,B, G,G,A,G,D5,C5, G,G,783.99,E5,C5,B,440, 698.46,698.46,E5,C5,D5,C5};
	double beat[]= {200,200,300,300,300,400,200,200,300,300,300,400,200,200,300,300,300,300,300,200,200,300,300,300,400};
	i = 0; 
	for(; i<25; i++){
		if(p == 0){
 610:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <p>
 614:	91 11       	cpse	r25, r1
 616:	30 c0       	rjmp	.+96     	; 0x678 <song3+0xb2>
			set_PWM(freq[i]);
 618:	e1 e0       	ldi	r30, 0x01	; 1
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	ec 0f       	add	r30, r28
 61e:	fd 1f       	adc	r31, r29
 620:	94 e0       	ldi	r25, 0x04	; 4
 622:	89 9f       	mul	r24, r25
 624:	e0 0d       	add	r30, r0
 626:	f1 1d       	adc	r31, r1
 628:	11 24       	eor	r1, r1
 62a:	60 81       	ld	r22, Z
 62c:	71 81       	ldd	r23, Z+1	; 0x01
 62e:	82 81       	ldd	r24, Z+2	; 0x02
 630:	93 81       	ldd	r25, Z+3	; 0x03
 632:	13 de       	rcall	.-986    	; 0x25a <set_PWM>
			TimerSet(beat[i]);
 634:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 638:	e5 e6       	ldi	r30, 0x65	; 101
 63a:	f0 e0       	ldi	r31, 0x00	; 0
 63c:	ec 0f       	add	r30, r28
 63e:	fd 1f       	adc	r31, r29
 640:	94 e0       	ldi	r25, 0x04	; 4
 642:	89 9f       	mul	r24, r25
 644:	e0 0d       	add	r30, r0
 646:	f1 1d       	adc	r31, r1
 648:	11 24       	eor	r1, r1
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	82 81       	ldd	r24, Z+2	; 0x02
 650:	93 81       	ldd	r25, Z+3	; 0x03
 652:	84 d1       	rcall	.+776    	; 0x95c <__fixunssfsi>
 654:	f1 dd       	rcall	.-1054   	; 0x238 <TimerSet>
			while(!TimerFlag);
 656:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
 65a:	88 23       	and	r24, r24
 65c:	e1 f3       	breq	.-8      	; 0x656 <song3+0x90>
			TimerFlag = 0;
 65e:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
	
			//Blinking LEDS
			if(i%2 ==0)
 662:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 666:	80 fd       	sbrc	r24, 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <song3+0xa8>
			PORTB = 0x01;
 66a:	15 b9       	out	0x05, r17	; 5
 66c:	01 c0       	rjmp	.+2      	; 0x670 <song3+0xaa>
			else
			PORTB = 0x02;
			set_PWM(0);
 66e:	05 b9       	out	0x05, r16	; 5
 670:	60 e0       	ldi	r22, 0x00	; 0
 672:	70 e0       	ldi	r23, 0x00	; 0
 674:	cb 01       	movw	r24, r22
		}
		
		tmpA = ~PINA; 
 676:	f1 dd       	rcall	.-1054   	; 0x25a <set_PWM>
 678:	80 b1       	in	r24, 0x00	; 0
 67a:	80 95       	com	r24
 67c:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <tmpA>
		//Pause
		if(tmpA == 0x01){
 680:	81 30       	cpi	r24, 0x01	; 1
			if(p == 0)
 682:	51 f4       	brne	.+20     	; 0x698 <song3+0xd2>
 684:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <p>
 688:	81 11       	cpse	r24, r1
			p = 1;
 68a:	03 c0       	rjmp	.+6      	; 0x692 <song3+0xcc>
 68c:	10 93 76 04 	sts	0x0476, r17	; 0x800476 <p>
			else
			p = 0;
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <song3+0xda>
 692:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <p>
		}
		if(p == 1){
 696:	20 c0       	rjmp	.+64     	; 0x6d8 <song3+0x112>
 698:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <p>
			set_PWM(0);
 69c:	81 30       	cpi	r24, 0x01	; 1
 69e:	79 f4       	brne	.+30     	; 0x6be <song3+0xf8>
 6a0:	60 e0       	ldi	r22, 0x00	; 0
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	cb 01       	movw	r24, r22
			i--;
 6a6:	d9 dd       	rcall	.-1102   	; 0x25a <set_PWM>
 6a8:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 6ac:	81 50       	subi	r24, 0x01	; 1
 6ae:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <i>
			while(!TimerFlag);
 6b2:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
 6b6:	88 23       	and	r24, r24
			TimerFlag = 0;
 6b8:	e1 f3       	breq	.-8      	; 0x6b2 <song3+0xec>
 6ba:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
		}
		//Stop button
		if(tmpA == 0x02){
 6be:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <tmpA>
			set_PWM((0));
 6c2:	82 30       	cpi	r24, 0x02	; 2
 6c4:	29 f4       	brne	.+10     	; 0x6d0 <song3+0x10a>
 6c6:	60 e0       	ldi	r22, 0x00	; 0
 6c8:	70 e0       	ldi	r23, 0x00	; 0
 6ca:	cb 01       	movw	r24, r22
			break;
 6cc:	c6 dd       	rcall	.-1140   	; 0x25a <set_PWM>
		}
		if(tmpA == 0x08)
 6ce:	0c c0       	rjmp	.+24     	; 0x6e8 <song3+0x122>
 6d0:	88 30       	cpi	r24, 0x08	; 8
			break;
		if(tmpA == 0x10)
 6d2:	51 f0       	breq	.+20     	; 0x6e8 <song3+0x122>
 6d4:	80 31       	cpi	r24, 0x10	; 16

void song3(){	
	double freq[]= {G,G,A,G,C5,B, G,G,A,G,D5,C5, G,G,783.99,E5,C5,B,440, 698.46,698.46,E5,C5,D5,C5};
	double beat[]= {200,200,300,300,300,400,200,200,300,300,300,400,200,200,300,300,300,300,300,200,200,300,300,300,400};
	i = 0; 
	for(; i<25; i++){
 6d6:	41 f0       	breq	.+16     	; 0x6e8 <song3+0x122>
 6d8:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <i>
 6dc:	8f 5f       	subi	r24, 0xFF	; 255
 6de:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <i>
 6e2:	89 31       	cpi	r24, 0x19	; 25
 6e4:	08 f4       	brcc	.+2      	; 0x6e8 <song3+0x122>
		if(tmpA == 0x08)
			break;
		if(tmpA == 0x10)
			break;
	}
}
 6e6:	94 cf       	rjmp	.-216    	; 0x610 <song3+0x4a>
 6e8:	c8 53       	subi	r28, 0x38	; 56
 6ea:	df 4f       	sbci	r29, 0xFF	; 255
 6ec:	0f b6       	in	r0, 0x3f	; 63
 6ee:	f8 94       	cli
 6f0:	de bf       	out	0x3e, r29	; 62
 6f2:	0f be       	out	0x3f, r0	; 63
 6f4:	cd bf       	out	0x3d, r28	; 61
 6f6:	df 91       	pop	r29
 6f8:	cf 91       	pop	r28
 6fa:	1f 91       	pop	r17
 6fc:	0f 91       	pop	r16
 6fe:	08 95       	ret

00000700 <LCD_FSM>:
enum LCD_States{init, menu, songList, songList2, dispSong1, dispSong2, dispSong3}LCD_State;

void LCD_FSM(){
	tmpA = ~PINA;
 700:	90 b1       	in	r25, 0x00	; 0
 702:	90 95       	com	r25
 704:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <tmpA>
	switch(LCD_State){//transitions
 708:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <LCD_State>
 70c:	82 30       	cpi	r24, 0x02	; 2
 70e:	a9 f0       	breq	.+42     	; 0x73a <LCD_FSM+0x3a>
 710:	28 f4       	brcc	.+10     	; 0x71c <LCD_FSM+0x1c>
 712:	88 23       	and	r24, r24
 714:	41 f0       	breq	.+16     	; 0x726 <LCD_FSM+0x26>
 716:	81 30       	cpi	r24, 0x01	; 1
 718:	51 f0       	breq	.+20     	; 0x72e <LCD_FSM+0x2e>
 71a:	2d c0       	rjmp	.+90     	; 0x776 <LCD_FSM+0x76>
 71c:	83 30       	cpi	r24, 0x03	; 3
 71e:	f9 f0       	breq	.+62     	; 0x75e <LCD_FSM+0x5e>
 720:	87 30       	cpi	r24, 0x07	; 7
 722:	60 f1       	brcs	.+88     	; 0x77c <LCD_FSM+0x7c>
 724:	28 c0       	rjmp	.+80     	; 0x776 <LCD_FSM+0x76>
		case init:
			LCD_State = menu;
 726:	81 e0       	ldi	r24, 0x01	; 1
 728:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
			break;
 72c:	37 c0       	rjmp	.+110    	; 0x79c <LCD_FSM+0x9c>
		
		case menu:
			if(tmpA)
 72e:	99 23       	and	r25, r25
 730:	a9 f1       	breq	.+106    	; 0x79c <LCD_FSM+0x9c>
				LCD_State = songList;
 732:	82 e0       	ldi	r24, 0x02	; 2
 734:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 738:	36 c0       	rjmp	.+108    	; 0x7a6 <LCD_FSM+0xa6>
			else
				LCD_State = menu;
			break;
		
		case songList:
			if(tmpA == 0x01)
 73a:	91 30       	cpi	r25, 0x01	; 1
 73c:	21 f4       	brne	.+8      	; 0x746 <LCD_FSM+0x46>
				LCD_State = dispSong1;
 73e:	84 e0       	ldi	r24, 0x04	; 4
 740:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 744:	3a c0       	rjmp	.+116    	; 0x7ba <LCD_FSM+0xba>
			else if(tmpA == 0x02)
 746:	92 30       	cpi	r25, 0x02	; 2
 748:	21 f4       	brne	.+8      	; 0x752 <LCD_FSM+0x52>
				LCD_State = dispSong2;
 74a:	85 e0       	ldi	r24, 0x05	; 5
 74c:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 750:	4b c0       	rjmp	.+150    	; 0x7e8 <LCD_FSM+0xe8>
			else if(tmpA == 0x10)
 752:	90 31       	cpi	r25, 0x10	; 16
 754:	41 f5       	brne	.+80     	; 0x7a6 <LCD_FSM+0xa6>
				LCD_State = songList2;    
 756:	83 e0       	ldi	r24, 0x03	; 3
 758:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 75c:	29 c0       	rjmp	.+82     	; 0x7b0 <LCD_FSM+0xb0>
			else
				LCD_State = songList;
			break;
		
		case songList2: 
			if(tmpA == 0x08)
 75e:	98 30       	cpi	r25, 0x08	; 8
 760:	21 f4       	brne	.+8      	; 0x76a <LCD_FSM+0x6a>
				LCD_State = songList; 
 762:	82 e0       	ldi	r24, 0x02	; 2
 764:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 768:	1e c0       	rjmp	.+60     	; 0x7a6 <LCD_FSM+0xa6>
			else if(tmpA == 0x04)
 76a:	94 30       	cpi	r25, 0x04	; 4
 76c:	09 f5       	brne	.+66     	; 0x7b0 <LCD_FSM+0xb0>
				LCD_State = dispSong3; 
 76e:	86 e0       	ldi	r24, 0x06	; 6
 770:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 774:	50 c0       	rjmp	.+160    	; 0x816 <LCD_FSM+0x116>
			if(0x00)
				LCD_State = menu;
			break; 
			
		default:
			LCD_State = init;
 776:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <LCD_State>
 77a:	08 95       	ret
			break;
	}//transition
	switch(LCD_State){//state actions
 77c:	83 30       	cpi	r24, 0x03	; 3
 77e:	c1 f0       	breq	.+48     	; 0x7b0 <LCD_FSM+0xb0>
 780:	30 f4       	brcc	.+12     	; 0x78e <LCD_FSM+0x8e>
 782:	81 30       	cpi	r24, 0x01	; 1
 784:	59 f0       	breq	.+22     	; 0x79c <LCD_FSM+0x9c>
 786:	82 30       	cpi	r24, 0x02	; 2
 788:	09 f0       	breq	.+2      	; 0x78c <LCD_FSM+0x8c>
 78a:	5b c0       	rjmp	.+182    	; 0x842 <LCD_FSM+0x142>
 78c:	0c c0       	rjmp	.+24     	; 0x7a6 <LCD_FSM+0xa6>
 78e:	85 30       	cpi	r24, 0x05	; 5
 790:	59 f1       	breq	.+86     	; 0x7e8 <LCD_FSM+0xe8>
 792:	98 f0       	brcs	.+38     	; 0x7ba <LCD_FSM+0xba>
 794:	86 30       	cpi	r24, 0x06	; 6
 796:	09 f4       	brne	.+2      	; 0x79a <LCD_FSM+0x9a>
 798:	3e c0       	rjmp	.+124    	; 0x816 <LCD_FSM+0x116>
 79a:	08 95       	ret
		case init:
			break;
			
		case menu:
			LCD_DisplayString(1, "    JUKEBOX     Press any button");
 79c:	64 e0       	ldi	r22, 0x04	; 4
 79e:	74 e0       	ldi	r23, 0x04	; 4
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	d1 cc       	rjmp	.-1630   	; 0x146 <LCD_DisplayString>
			break;
 7a4:	08 95       	ret
			
		case songList:
			LCD_DisplayString(1, "1 Jingle Bells  2 Mario Theme");
 7a6:	65 e2       	ldi	r22, 0x25	; 37
 7a8:	74 e0       	ldi	r23, 0x04	; 4
 7aa:	81 e0       	ldi	r24, 0x01	; 1
 7ac:	cc cc       	rjmp	.-1640   	; 0x146 <LCD_DisplayString>
			break;
 7ae:	08 95       	ret
			
		case songList2: 
			LCD_DisplayString(1, "3 Happy Birthday");
 7b0:	63 e4       	ldi	r22, 0x43	; 67
 7b2:	74 e0       	ldi	r23, 0x04	; 4
 7b4:	81 e0       	ldi	r24, 0x01	; 1
 7b6:	c7 cc       	rjmp	.-1650   	; 0x146 <LCD_DisplayString>
			break; 
			
		case dispSong1:
			LCD_DisplayString(1, "1 Jingle Bells");
 7b8:	08 95       	ret
 7ba:	64 e5       	ldi	r22, 0x54	; 84
 7bc:	74 e0       	ldi	r23, 0x04	; 4
			song1();
 7be:	81 e0       	ldi	r24, 0x01	; 1
 7c0:	c2 dc       	rcall	.-1660   	; 0x146 <LCD_DisplayString>
			if(tmpA == 0x08)
 7c2:	c1 dd       	rcall	.-1150   	; 0x346 <song1>
 7c4:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <tmpA>
 7c8:	88 30       	cpi	r24, 0x08	; 8
				LCD_State = dispSong3; 
 7ca:	21 f4       	brne	.+8      	; 0x7d4 <LCD_FSM+0xd4>
 7cc:	86 e0       	ldi	r24, 0x06	; 6
 7ce:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
			else if (tmpA == 0x10)
 7d2:	08 95       	ret
 7d4:	80 31       	cpi	r24, 0x10	; 16
				LCD_State = dispSong2; 
 7d6:	21 f4       	brne	.+8      	; 0x7e0 <LCD_FSM+0xe0>
 7d8:	85 e0       	ldi	r24, 0x05	; 5
 7da:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
			else 
				LCD_State = menu;
 7de:	08 95       	ret
 7e0:	81 e0       	ldi	r24, 0x01	; 1
			break;
			
		case dispSong2:
			LCD_DisplayString(1, "2  Mario Theme");
 7e2:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 7e6:	08 95       	ret
 7e8:	63 e6       	ldi	r22, 0x63	; 99
 7ea:	74 e0       	ldi	r23, 0x04	; 4
			song2(); 
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	ab dc       	rcall	.-1706   	; 0x146 <LCD_DisplayString>
		    if(tmpA == 0x08)
 7f0:	47 de       	rcall	.-882    	; 0x480 <song2>
 7f2:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <tmpA>
 7f6:	88 30       	cpi	r24, 0x08	; 8
				 LCD_State = dispSong1;
 7f8:	21 f4       	brne	.+8      	; 0x802 <LCD_FSM+0x102>
 7fa:	84 e0       	ldi	r24, 0x04	; 4
 7fc:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
		    else if (tmpA == 0x10)
 800:	08 95       	ret
 802:	80 31       	cpi	r24, 0x10	; 16
				  LCD_State = dispSong3;
 804:	21 f4       	brne	.+8      	; 0x80e <LCD_FSM+0x10e>
 806:	86 e0       	ldi	r24, 0x06	; 6
 808:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
		    else
				 LCD_State = menu;
 80c:	08 95       	ret
			break;
			
		case dispSong3: 
			LCD_DisplayString(1, "3 Happy Birthday");
 80e:	81 e0       	ldi	r24, 0x01	; 1
 810:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 814:	08 95       	ret
 816:	63 e4       	ldi	r22, 0x43	; 67
			song3(); 
 818:	74 e0       	ldi	r23, 0x04	; 4
 81a:	81 e0       	ldi	r24, 0x01	; 1
			if(tmpA == 0x08)
 81c:	94 dc       	rcall	.-1752   	; 0x146 <LCD_DisplayString>
 81e:	d3 de       	rcall	.-602    	; 0x5c6 <song3>
 820:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <tmpA>
				LCD_State = dispSong2;
 824:	88 30       	cpi	r24, 0x08	; 8
 826:	21 f4       	brne	.+8      	; 0x830 <LCD_FSM+0x130>
 828:	85 e0       	ldi	r24, 0x05	; 5
 82a:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
			else if (tmpA == 0x10)
 82e:	08 95       	ret
				LCD_State = dispSong1;
 830:	80 31       	cpi	r24, 0x10	; 16
 832:	21 f4       	brne	.+8      	; 0x83c <LCD_FSM+0x13c>
 834:	84 e0       	ldi	r24, 0x04	; 4
 836:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
			else
				LCD_State = menu;
 83a:	08 95       	ret
 83c:	81 e0       	ldi	r24, 0x01	; 1
 83e:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <LCD_State>
 842:	08 95       	ret

00000844 <main>:
	}//state actions
}

int main(void)
{	
	DDRA = 0x00; PORTA = 0xFF; 
 844:	11 b8       	out	0x01, r1	; 1
 846:	8f ef       	ldi	r24, 0xFF	; 255
 848:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; 
 84a:	84 b9       	out	0x04, r24	; 4
 84c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; // LCD data lines
 84e:	87 b9       	out	0x07, r24	; 7
 850:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
 852:	8a b9       	out	0x0a, r24	; 10
	
	LCD_init();
 854:	1b b8       	out	0x0b, r1	; 11
	TimerSet(250); 
 856:	5f dc       	rcall	.-1858   	; 0x116 <LCD_init>
 858:	6a ef       	ldi	r22, 0xFA	; 250
 85a:	70 e0       	ldi	r23, 0x00	; 0
	TimerOn(); 
 85c:	80 e0       	ldi	r24, 0x00	; 0
	PWM_on(); 
 85e:	90 e0       	ldi	r25, 0x00	; 0
	LCD_State = init;
 860:	eb dc       	rcall	.-1578   	; 0x238 <TimerSet>
 862:	8a dc       	rcall	.-1772   	; 0x178 <TimerOn>
	
    while (1) 
    {
		LCD_FSM();
 864:	65 dd       	rcall	.-1334   	; 0x330 <PWM_on>
 866:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <LCD_State>
		while(!TimerFlag);
 86a:	4a df       	rcall	.-364    	; 0x700 <LCD_FSM>
 86c:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <TimerFlag>
		TimerFlag = 0;
 870:	88 23       	and	r24, r24
 872:	e1 f3       	breq	.-8      	; 0x86c <main+0x28>
    }
 874:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <TimerFlag>
 878:	f8 cf       	rjmp	.-16     	; 0x86a <main+0x26>

0000087a <__cmpsf2>:
 87a:	9c d0       	rcall	.+312    	; 0x9b4 <__fp_cmp>
 87c:	08 f4       	brcc	.+2      	; 0x880 <__cmpsf2+0x6>
 87e:	81 e0       	ldi	r24, 0x01	; 1
 880:	08 95       	ret

00000882 <__divsf3>:
 882:	0c d0       	rcall	.+24     	; 0x89c <__divsf3x>
 884:	d2 c0       	rjmp	.+420    	; 0xa2a <__fp_round>
 886:	ca d0       	rcall	.+404    	; 0xa1c <__fp_pscB>
 888:	40 f0       	brcs	.+16     	; 0x89a <__divsf3+0x18>
 88a:	c1 d0       	rcall	.+386    	; 0xa0e <__fp_pscA>
 88c:	30 f0       	brcs	.+12     	; 0x89a <__divsf3+0x18>
 88e:	21 f4       	brne	.+8      	; 0x898 <__divsf3+0x16>
 890:	5f 3f       	cpi	r21, 0xFF	; 255
 892:	19 f0       	breq	.+6      	; 0x89a <__divsf3+0x18>
 894:	b3 c0       	rjmp	.+358    	; 0x9fc <__fp_inf>
 896:	51 11       	cpse	r21, r1
 898:	fc c0       	rjmp	.+504    	; 0xa92 <__fp_szero>
 89a:	b6 c0       	rjmp	.+364    	; 0xa08 <__fp_nan>

0000089c <__divsf3x>:
 89c:	d7 d0       	rcall	.+430    	; 0xa4c <__fp_split3>
 89e:	98 f3       	brcs	.-26     	; 0x886 <__divsf3+0x4>

000008a0 <__divsf3_pse>:
 8a0:	99 23       	and	r25, r25
 8a2:	c9 f3       	breq	.-14     	; 0x896 <__divsf3+0x14>
 8a4:	55 23       	and	r21, r21
 8a6:	b1 f3       	breq	.-20     	; 0x894 <__divsf3+0x12>
 8a8:	95 1b       	sub	r25, r21
 8aa:	55 0b       	sbc	r21, r21
 8ac:	bb 27       	eor	r27, r27
 8ae:	aa 27       	eor	r26, r26
 8b0:	62 17       	cp	r22, r18
 8b2:	73 07       	cpc	r23, r19
 8b4:	84 07       	cpc	r24, r20
 8b6:	38 f0       	brcs	.+14     	; 0x8c6 <__divsf3_pse+0x26>
 8b8:	9f 5f       	subi	r25, 0xFF	; 255
 8ba:	5f 4f       	sbci	r21, 0xFF	; 255
 8bc:	22 0f       	add	r18, r18
 8be:	33 1f       	adc	r19, r19
 8c0:	44 1f       	adc	r20, r20
 8c2:	aa 1f       	adc	r26, r26
 8c4:	a9 f3       	breq	.-22     	; 0x8b0 <__divsf3_pse+0x10>
 8c6:	33 d0       	rcall	.+102    	; 0x92e <__divsf3_pse+0x8e>
 8c8:	0e 2e       	mov	r0, r30
 8ca:	3a f0       	brmi	.+14     	; 0x8da <__divsf3_pse+0x3a>
 8cc:	e0 e8       	ldi	r30, 0x80	; 128
 8ce:	30 d0       	rcall	.+96     	; 0x930 <__divsf3_pse+0x90>
 8d0:	91 50       	subi	r25, 0x01	; 1
 8d2:	50 40       	sbci	r21, 0x00	; 0
 8d4:	e6 95       	lsr	r30
 8d6:	00 1c       	adc	r0, r0
 8d8:	ca f7       	brpl	.-14     	; 0x8cc <__divsf3_pse+0x2c>
 8da:	29 d0       	rcall	.+82     	; 0x92e <__divsf3_pse+0x8e>
 8dc:	fe 2f       	mov	r31, r30
 8de:	27 d0       	rcall	.+78     	; 0x92e <__divsf3_pse+0x8e>
 8e0:	66 0f       	add	r22, r22
 8e2:	77 1f       	adc	r23, r23
 8e4:	88 1f       	adc	r24, r24
 8e6:	bb 1f       	adc	r27, r27
 8e8:	26 17       	cp	r18, r22
 8ea:	37 07       	cpc	r19, r23
 8ec:	48 07       	cpc	r20, r24
 8ee:	ab 07       	cpc	r26, r27
 8f0:	b0 e8       	ldi	r27, 0x80	; 128
 8f2:	09 f0       	breq	.+2      	; 0x8f6 <__divsf3_pse+0x56>
 8f4:	bb 0b       	sbc	r27, r27
 8f6:	80 2d       	mov	r24, r0
 8f8:	bf 01       	movw	r22, r30
 8fa:	ff 27       	eor	r31, r31
 8fc:	93 58       	subi	r25, 0x83	; 131
 8fe:	5f 4f       	sbci	r21, 0xFF	; 255
 900:	2a f0       	brmi	.+10     	; 0x90c <__divsf3_pse+0x6c>
 902:	9e 3f       	cpi	r25, 0xFE	; 254
 904:	51 05       	cpc	r21, r1
 906:	68 f0       	brcs	.+26     	; 0x922 <__divsf3_pse+0x82>
 908:	79 c0       	rjmp	.+242    	; 0x9fc <__fp_inf>
 90a:	c3 c0       	rjmp	.+390    	; 0xa92 <__fp_szero>
 90c:	5f 3f       	cpi	r21, 0xFF	; 255
 90e:	ec f3       	brlt	.-6      	; 0x90a <__divsf3_pse+0x6a>
 910:	98 3e       	cpi	r25, 0xE8	; 232
 912:	dc f3       	brlt	.-10     	; 0x90a <__divsf3_pse+0x6a>
 914:	86 95       	lsr	r24
 916:	77 95       	ror	r23
 918:	67 95       	ror	r22
 91a:	b7 95       	ror	r27
 91c:	f7 95       	ror	r31
 91e:	9f 5f       	subi	r25, 0xFF	; 255
 920:	c9 f7       	brne	.-14     	; 0x914 <__divsf3_pse+0x74>
 922:	88 0f       	add	r24, r24
 924:	91 1d       	adc	r25, r1
 926:	96 95       	lsr	r25
 928:	87 95       	ror	r24
 92a:	97 f9       	bld	r25, 7
 92c:	08 95       	ret
 92e:	e1 e0       	ldi	r30, 0x01	; 1
 930:	66 0f       	add	r22, r22
 932:	77 1f       	adc	r23, r23
 934:	88 1f       	adc	r24, r24
 936:	bb 1f       	adc	r27, r27
 938:	62 17       	cp	r22, r18
 93a:	73 07       	cpc	r23, r19
 93c:	84 07       	cpc	r24, r20
 93e:	ba 07       	cpc	r27, r26
 940:	20 f0       	brcs	.+8      	; 0x94a <__divsf3_pse+0xaa>
 942:	62 1b       	sub	r22, r18
 944:	73 0b       	sbc	r23, r19
 946:	84 0b       	sbc	r24, r20
 948:	ba 0b       	sbc	r27, r26
 94a:	ee 1f       	adc	r30, r30
 94c:	88 f7       	brcc	.-30     	; 0x930 <__divsf3_pse+0x90>
 94e:	e0 95       	com	r30
 950:	08 95       	ret

00000952 <__fixsfsi>:
 952:	04 d0       	rcall	.+8      	; 0x95c <__fixunssfsi>
 954:	68 94       	set
 956:	b1 11       	cpse	r27, r1
 958:	9c c0       	rjmp	.+312    	; 0xa92 <__fp_szero>
 95a:	08 95       	ret

0000095c <__fixunssfsi>:
 95c:	7f d0       	rcall	.+254    	; 0xa5c <__fp_splitA>
 95e:	88 f0       	brcs	.+34     	; 0x982 <__fixunssfsi+0x26>
 960:	9f 57       	subi	r25, 0x7F	; 127
 962:	90 f0       	brcs	.+36     	; 0x988 <__fixunssfsi+0x2c>
 964:	b9 2f       	mov	r27, r25
 966:	99 27       	eor	r25, r25
 968:	b7 51       	subi	r27, 0x17	; 23
 96a:	a0 f0       	brcs	.+40     	; 0x994 <__fixunssfsi+0x38>
 96c:	d1 f0       	breq	.+52     	; 0x9a2 <__fixunssfsi+0x46>
 96e:	66 0f       	add	r22, r22
 970:	77 1f       	adc	r23, r23
 972:	88 1f       	adc	r24, r24
 974:	99 1f       	adc	r25, r25
 976:	1a f0       	brmi	.+6      	; 0x97e <__fixunssfsi+0x22>
 978:	ba 95       	dec	r27
 97a:	c9 f7       	brne	.-14     	; 0x96e <__fixunssfsi+0x12>
 97c:	12 c0       	rjmp	.+36     	; 0x9a2 <__fixunssfsi+0x46>
 97e:	b1 30       	cpi	r27, 0x01	; 1
 980:	81 f0       	breq	.+32     	; 0x9a2 <__fixunssfsi+0x46>
 982:	86 d0       	rcall	.+268    	; 0xa90 <__fp_zero>
 984:	b1 e0       	ldi	r27, 0x01	; 1
 986:	08 95       	ret
 988:	83 c0       	rjmp	.+262    	; 0xa90 <__fp_zero>
 98a:	67 2f       	mov	r22, r23
 98c:	78 2f       	mov	r23, r24
 98e:	88 27       	eor	r24, r24
 990:	b8 5f       	subi	r27, 0xF8	; 248
 992:	39 f0       	breq	.+14     	; 0x9a2 <__fixunssfsi+0x46>
 994:	b9 3f       	cpi	r27, 0xF9	; 249
 996:	cc f3       	brlt	.-14     	; 0x98a <__fixunssfsi+0x2e>
 998:	86 95       	lsr	r24
 99a:	77 95       	ror	r23
 99c:	67 95       	ror	r22
 99e:	b3 95       	inc	r27
 9a0:	d9 f7       	brne	.-10     	; 0x998 <__fixunssfsi+0x3c>
 9a2:	3e f4       	brtc	.+14     	; 0x9b2 <__fixunssfsi+0x56>
 9a4:	90 95       	com	r25
 9a6:	80 95       	com	r24
 9a8:	70 95       	com	r23
 9aa:	61 95       	neg	r22
 9ac:	7f 4f       	sbci	r23, 0xFF	; 255
 9ae:	8f 4f       	sbci	r24, 0xFF	; 255
 9b0:	9f 4f       	sbci	r25, 0xFF	; 255
 9b2:	08 95       	ret

000009b4 <__fp_cmp>:
 9b4:	99 0f       	add	r25, r25
 9b6:	00 08       	sbc	r0, r0
 9b8:	55 0f       	add	r21, r21
 9ba:	aa 0b       	sbc	r26, r26
 9bc:	e0 e8       	ldi	r30, 0x80	; 128
 9be:	fe ef       	ldi	r31, 0xFE	; 254
 9c0:	16 16       	cp	r1, r22
 9c2:	17 06       	cpc	r1, r23
 9c4:	e8 07       	cpc	r30, r24
 9c6:	f9 07       	cpc	r31, r25
 9c8:	c0 f0       	brcs	.+48     	; 0x9fa <__fp_cmp+0x46>
 9ca:	12 16       	cp	r1, r18
 9cc:	13 06       	cpc	r1, r19
 9ce:	e4 07       	cpc	r30, r20
 9d0:	f5 07       	cpc	r31, r21
 9d2:	98 f0       	brcs	.+38     	; 0x9fa <__fp_cmp+0x46>
 9d4:	62 1b       	sub	r22, r18
 9d6:	73 0b       	sbc	r23, r19
 9d8:	84 0b       	sbc	r24, r20
 9da:	95 0b       	sbc	r25, r21
 9dc:	39 f4       	brne	.+14     	; 0x9ec <__fp_cmp+0x38>
 9de:	0a 26       	eor	r0, r26
 9e0:	61 f0       	breq	.+24     	; 0x9fa <__fp_cmp+0x46>
 9e2:	23 2b       	or	r18, r19
 9e4:	24 2b       	or	r18, r20
 9e6:	25 2b       	or	r18, r21
 9e8:	21 f4       	brne	.+8      	; 0x9f2 <__fp_cmp+0x3e>
 9ea:	08 95       	ret
 9ec:	0a 26       	eor	r0, r26
 9ee:	09 f4       	brne	.+2      	; 0x9f2 <__fp_cmp+0x3e>
 9f0:	a1 40       	sbci	r26, 0x01	; 1
 9f2:	a6 95       	lsr	r26
 9f4:	8f ef       	ldi	r24, 0xFF	; 255
 9f6:	81 1d       	adc	r24, r1
 9f8:	81 1d       	adc	r24, r1
 9fa:	08 95       	ret

000009fc <__fp_inf>:
 9fc:	97 f9       	bld	r25, 7
 9fe:	9f 67       	ori	r25, 0x7F	; 127
 a00:	80 e8       	ldi	r24, 0x80	; 128
 a02:	70 e0       	ldi	r23, 0x00	; 0
 a04:	60 e0       	ldi	r22, 0x00	; 0
 a06:	08 95       	ret

00000a08 <__fp_nan>:
 a08:	9f ef       	ldi	r25, 0xFF	; 255
 a0a:	80 ec       	ldi	r24, 0xC0	; 192
 a0c:	08 95       	ret

00000a0e <__fp_pscA>:
 a0e:	00 24       	eor	r0, r0
 a10:	0a 94       	dec	r0
 a12:	16 16       	cp	r1, r22
 a14:	17 06       	cpc	r1, r23
 a16:	18 06       	cpc	r1, r24
 a18:	09 06       	cpc	r0, r25
 a1a:	08 95       	ret

00000a1c <__fp_pscB>:
 a1c:	00 24       	eor	r0, r0
 a1e:	0a 94       	dec	r0
 a20:	12 16       	cp	r1, r18
 a22:	13 06       	cpc	r1, r19
 a24:	14 06       	cpc	r1, r20
 a26:	05 06       	cpc	r0, r21
 a28:	08 95       	ret

00000a2a <__fp_round>:
 a2a:	09 2e       	mov	r0, r25
 a2c:	03 94       	inc	r0
 a2e:	00 0c       	add	r0, r0
 a30:	11 f4       	brne	.+4      	; 0xa36 <__fp_round+0xc>
 a32:	88 23       	and	r24, r24
 a34:	52 f0       	brmi	.+20     	; 0xa4a <__fp_round+0x20>
 a36:	bb 0f       	add	r27, r27
 a38:	40 f4       	brcc	.+16     	; 0xa4a <__fp_round+0x20>
 a3a:	bf 2b       	or	r27, r31
 a3c:	11 f4       	brne	.+4      	; 0xa42 <__fp_round+0x18>
 a3e:	60 ff       	sbrs	r22, 0
 a40:	04 c0       	rjmp	.+8      	; 0xa4a <__fp_round+0x20>
 a42:	6f 5f       	subi	r22, 0xFF	; 255
 a44:	7f 4f       	sbci	r23, 0xFF	; 255
 a46:	8f 4f       	sbci	r24, 0xFF	; 255
 a48:	9f 4f       	sbci	r25, 0xFF	; 255
 a4a:	08 95       	ret

00000a4c <__fp_split3>:
 a4c:	57 fd       	sbrc	r21, 7
 a4e:	90 58       	subi	r25, 0x80	; 128
 a50:	44 0f       	add	r20, r20
 a52:	55 1f       	adc	r21, r21
 a54:	59 f0       	breq	.+22     	; 0xa6c <__fp_splitA+0x10>
 a56:	5f 3f       	cpi	r21, 0xFF	; 255
 a58:	71 f0       	breq	.+28     	; 0xa76 <__fp_splitA+0x1a>
 a5a:	47 95       	ror	r20

00000a5c <__fp_splitA>:
 a5c:	88 0f       	add	r24, r24
 a5e:	97 fb       	bst	r25, 7
 a60:	99 1f       	adc	r25, r25
 a62:	61 f0       	breq	.+24     	; 0xa7c <__fp_splitA+0x20>
 a64:	9f 3f       	cpi	r25, 0xFF	; 255
 a66:	79 f0       	breq	.+30     	; 0xa86 <__fp_splitA+0x2a>
 a68:	87 95       	ror	r24
 a6a:	08 95       	ret
 a6c:	12 16       	cp	r1, r18
 a6e:	13 06       	cpc	r1, r19
 a70:	14 06       	cpc	r1, r20
 a72:	55 1f       	adc	r21, r21
 a74:	f2 cf       	rjmp	.-28     	; 0xa5a <__fp_split3+0xe>
 a76:	46 95       	lsr	r20
 a78:	f1 df       	rcall	.-30     	; 0xa5c <__fp_splitA>
 a7a:	08 c0       	rjmp	.+16     	; 0xa8c <__fp_splitA+0x30>
 a7c:	16 16       	cp	r1, r22
 a7e:	17 06       	cpc	r1, r23
 a80:	18 06       	cpc	r1, r24
 a82:	99 1f       	adc	r25, r25
 a84:	f1 cf       	rjmp	.-30     	; 0xa68 <__fp_splitA+0xc>
 a86:	86 95       	lsr	r24
 a88:	71 05       	cpc	r23, r1
 a8a:	61 05       	cpc	r22, r1
 a8c:	08 94       	sec
 a8e:	08 95       	ret

00000a90 <__fp_zero>:
 a90:	e8 94       	clt

00000a92 <__fp_szero>:
 a92:	bb 27       	eor	r27, r27
 a94:	66 27       	eor	r22, r22
 a96:	77 27       	eor	r23, r23
 a98:	cb 01       	movw	r24, r22
 a9a:	97 f9       	bld	r25, 7
 a9c:	08 95       	ret

00000a9e <__gesf2>:
 a9e:	8a df       	rcall	.-236    	; 0x9b4 <__fp_cmp>
 aa0:	08 f4       	brcc	.+2      	; 0xaa4 <__gesf2+0x6>
 aa2:	8f ef       	ldi	r24, 0xFF	; 255
 aa4:	08 95       	ret

00000aa6 <__mulsf3>:
 aa6:	0b d0       	rcall	.+22     	; 0xabe <__mulsf3x>
 aa8:	c0 cf       	rjmp	.-128    	; 0xa2a <__fp_round>
 aaa:	b1 df       	rcall	.-158    	; 0xa0e <__fp_pscA>
 aac:	28 f0       	brcs	.+10     	; 0xab8 <__mulsf3+0x12>
 aae:	b6 df       	rcall	.-148    	; 0xa1c <__fp_pscB>
 ab0:	18 f0       	brcs	.+6      	; 0xab8 <__mulsf3+0x12>
 ab2:	95 23       	and	r25, r21
 ab4:	09 f0       	breq	.+2      	; 0xab8 <__mulsf3+0x12>
 ab6:	a2 cf       	rjmp	.-188    	; 0x9fc <__fp_inf>
 ab8:	a7 cf       	rjmp	.-178    	; 0xa08 <__fp_nan>
 aba:	11 24       	eor	r1, r1
 abc:	ea cf       	rjmp	.-44     	; 0xa92 <__fp_szero>

00000abe <__mulsf3x>:
 abe:	c6 df       	rcall	.-116    	; 0xa4c <__fp_split3>
 ac0:	a0 f3       	brcs	.-24     	; 0xaaa <__mulsf3+0x4>

00000ac2 <__mulsf3_pse>:
 ac2:	95 9f       	mul	r25, r21
 ac4:	d1 f3       	breq	.-12     	; 0xaba <__mulsf3+0x14>
 ac6:	95 0f       	add	r25, r21
 ac8:	50 e0       	ldi	r21, 0x00	; 0
 aca:	55 1f       	adc	r21, r21
 acc:	62 9f       	mul	r22, r18
 ace:	f0 01       	movw	r30, r0
 ad0:	72 9f       	mul	r23, r18
 ad2:	bb 27       	eor	r27, r27
 ad4:	f0 0d       	add	r31, r0
 ad6:	b1 1d       	adc	r27, r1
 ad8:	63 9f       	mul	r22, r19
 ada:	aa 27       	eor	r26, r26
 adc:	f0 0d       	add	r31, r0
 ade:	b1 1d       	adc	r27, r1
 ae0:	aa 1f       	adc	r26, r26
 ae2:	64 9f       	mul	r22, r20
 ae4:	66 27       	eor	r22, r22
 ae6:	b0 0d       	add	r27, r0
 ae8:	a1 1d       	adc	r26, r1
 aea:	66 1f       	adc	r22, r22
 aec:	82 9f       	mul	r24, r18
 aee:	22 27       	eor	r18, r18
 af0:	b0 0d       	add	r27, r0
 af2:	a1 1d       	adc	r26, r1
 af4:	62 1f       	adc	r22, r18
 af6:	73 9f       	mul	r23, r19
 af8:	b0 0d       	add	r27, r0
 afa:	a1 1d       	adc	r26, r1
 afc:	62 1f       	adc	r22, r18
 afe:	83 9f       	mul	r24, r19
 b00:	a0 0d       	add	r26, r0
 b02:	61 1d       	adc	r22, r1
 b04:	22 1f       	adc	r18, r18
 b06:	74 9f       	mul	r23, r20
 b08:	33 27       	eor	r19, r19
 b0a:	a0 0d       	add	r26, r0
 b0c:	61 1d       	adc	r22, r1
 b0e:	23 1f       	adc	r18, r19
 b10:	84 9f       	mul	r24, r20
 b12:	60 0d       	add	r22, r0
 b14:	21 1d       	adc	r18, r1
 b16:	82 2f       	mov	r24, r18
 b18:	76 2f       	mov	r23, r22
 b1a:	6a 2f       	mov	r22, r26
 b1c:	11 24       	eor	r1, r1
 b1e:	9f 57       	subi	r25, 0x7F	; 127
 b20:	50 40       	sbci	r21, 0x00	; 0
 b22:	8a f0       	brmi	.+34     	; 0xb46 <__mulsf3_pse+0x84>
 b24:	e1 f0       	breq	.+56     	; 0xb5e <__mulsf3_pse+0x9c>
 b26:	88 23       	and	r24, r24
 b28:	4a f0       	brmi	.+18     	; 0xb3c <__mulsf3_pse+0x7a>
 b2a:	ee 0f       	add	r30, r30
 b2c:	ff 1f       	adc	r31, r31
 b2e:	bb 1f       	adc	r27, r27
 b30:	66 1f       	adc	r22, r22
 b32:	77 1f       	adc	r23, r23
 b34:	88 1f       	adc	r24, r24
 b36:	91 50       	subi	r25, 0x01	; 1
 b38:	50 40       	sbci	r21, 0x00	; 0
 b3a:	a9 f7       	brne	.-22     	; 0xb26 <__mulsf3_pse+0x64>
 b3c:	9e 3f       	cpi	r25, 0xFE	; 254
 b3e:	51 05       	cpc	r21, r1
 b40:	70 f0       	brcs	.+28     	; 0xb5e <__mulsf3_pse+0x9c>
 b42:	5c cf       	rjmp	.-328    	; 0x9fc <__fp_inf>
 b44:	a6 cf       	rjmp	.-180    	; 0xa92 <__fp_szero>
 b46:	5f 3f       	cpi	r21, 0xFF	; 255
 b48:	ec f3       	brlt	.-6      	; 0xb44 <__mulsf3_pse+0x82>
 b4a:	98 3e       	cpi	r25, 0xE8	; 232
 b4c:	dc f3       	brlt	.-10     	; 0xb44 <__mulsf3_pse+0x82>
 b4e:	86 95       	lsr	r24
 b50:	77 95       	ror	r23
 b52:	67 95       	ror	r22
 b54:	b7 95       	ror	r27
 b56:	f7 95       	ror	r31
 b58:	e7 95       	ror	r30
 b5a:	9f 5f       	subi	r25, 0xFF	; 255
 b5c:	c1 f7       	brne	.-16     	; 0xb4e <__mulsf3_pse+0x8c>
 b5e:	fe 2b       	or	r31, r30
 b60:	88 0f       	add	r24, r24
 b62:	91 1d       	adc	r25, r1
 b64:	96 95       	lsr	r25
 b66:	87 95       	ror	r24
 b68:	97 f9       	bld	r25, 7
 b6a:	08 95       	ret

00000b6c <_exit>:
 b6c:	f8 94       	cli

00000b6e <__stop_program>:
 b6e:	ff cf       	rjmp	.-2      	; 0xb6e <__stop_program>
